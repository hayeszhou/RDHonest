% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RD_lp.R
\name{RDOptBW.fit}
\alias{RDOptBW.fit}
\title{Basic computing engine called by \code{\link{RDOptBW}} used to find
optimal bandwidth}
\usage{
RDOptBW.fit(d, M, kern = "triangular", opt.criterion, bw.equal = TRUE,
  alpha = 0.05, beta = 0.8, sclass = "H", order = 1,
  se.initial = "IKEHW")
}
\arguments{
\item{d}{object of class \code{"RDData"}}

\item{M}{Bound on second derivative of the conditional mean function.}

\item{kern}{specifies kernel function used in the local regression. It can
either be a string equal to \code{"triangular"} (\eqn{k(u)=(1-|u|)_{+}}),
\code{"epanechnikov"} (\eqn{k(u)=(3/4)(1-u^2)_{+}}), or \code{"uniform"}
(\eqn{k(u)= (|u|<1)/2}), or else a kernel function.}

\item{opt.criterion}{Optimality criterion that bandwidth is designed to
    optimize. It can either be based on exact finite-sample maximum bias and
    finite-sample estimate of variance, or asymptotic approximations to the
    bias and variance. The options are:

   \describe{

   \item{\code{"MSE"}, \code{"aMSE"}}{Finite-sample or asymtotic maximum
       MSE}

   \item{\code{"FLCI"}, \code{"aFLCI"}}{Length of (fixed-length) two-sided
       confidence intervals.}

   \item{\code{"OCI"}, \code{"aOCI"}}{Given quantile of excess length of
       one-sided confidence intervals}

    }

    The finite-sample methods use conditional variance given by
    \code{sigma2}, if supplied. Otherwise, for the purpose of estimating the
    optimal bandwidth, conditional variance is assumed homoscedastic, and
    estimated using a nearest neighbor estimator.}

\item{bw.equal}{logical specifying whether bandwidths on either side of
cutoff should be constrainted to equal to each other.}

\item{alpha}{determines confidence level, \code{1-alpha} for
constructing/optimizing confidence intervals.}

\item{beta}{Determines quantile of excess length to optimize, if bandwidth
optimizes given quantile of excess length of one-sided confidence
intervals.}

\item{sclass}{Smoothness class, either \code{"T"} for Taylor or
\code{"H"} for HÃ¶lder class.}

\item{order}{Order of local regression 1 for linear, 2 for quadratic.}

\item{se.initial}{Method for estimating initial variance for computing
    optimal bandwidth. Ignored data already contains estimate of variance.

\describe{

\item{"IKEHW"}{Based on residuals from a local linear regression using a
              triangular kenrel and IK bandwidth}

\item{"IKdemeaned"}{Based on sum of squared deviations of outcome from
              estimate of intercept in local linear regression with
              triangular kenrel and IK bandwidth}

\item{"Silverman"}{Use residuals from local constant regression with uniform
kernel and bandwidth selected using Silverman's rule of thumb, as in Equation
(14) in IK}
\item{"SilvermanNN"}{Use nearest neighbor estimates, rather than residuals}

}}
}
\value{
a list with the following elements
    \describe{
    \item{\code{hp}}{bandwidth for observations above cutoff}

    \item{\code{hm}}{bandwidth for observations below cutoff, equal to \code{hp}
    unless \code{bw.equal==FALSE}}

    \item{\code{sigma2m}, \code{sigma2p}}{estimate of conditional variance
     above and below cutoff, from \code{d}}
   }
}
\description{
Basic computing engine called by \code{\link{RDOptBW}} used to find
optimal bandwidth
}
\examples{
## Lee data
d <- RDData(lee08, cutoff=0)
RDOptBW.fit(d, M=0.1, opt.criterion="MSE")[c("hp", "hm")]
}
