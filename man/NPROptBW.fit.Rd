% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NPR_lp.R
\name{NPROptBW.fit}
\alias{NPROptBW.fit}
\title{Optimal bandwidth selection in nonparametric regression}
\usage{
NPROptBW.fit(d, M, kern = "triangular", opt.criterion, bw.equal = TRUE,
  alpha = 0.05, beta = 0.8, sclass = "H", order = 1,
  se.initial = "EHW", T0 = 0)
}
\arguments{
\item{d}{object of class \code{"RDData"}, \code{"FRDData"}, or
\code{"LPPData"}}

\item{M}{Bound on second derivative of the conditional mean function.}

\item{kern}{specifies kernel function used in the local regression. It can
either be a string equal to \code{"triangular"} (\eqn{k(u)=(1-|u|)_{+}}),
\code{"epanechnikov"} (\eqn{k(u)=(3/4)(1-u^2)_{+}}), or \code{"uniform"}
(\eqn{k(u)= (|u|<1)/2}), or else a kernel function.}

\item{opt.criterion}{Optimality criterion that bandwidth is designed to
    optimize. The options are:

   \describe{

   \item{\code{"MSE"}}{Finite-sample maximum MSE}

   \item{\code{"FLCI"}}{Length of (fixed-length) two-sided
       confidence intervals.}

   \item{\code{"OCI"}}{Given quantile of excess length of one-sided
       confidence intervals}

    }

    The methods use conditional variance given by \code{sigma2}, if supplied.
    Otherwise, for the purpose of estimating the optimal bandwidth,
    conditional variance is estimated using the method specified by
    \code{se.initial}.}

\item{bw.equal}{logical specifying whether bandwidths on either side of
cutoff should be constrained to equal to each other.}

\item{alpha}{determines confidence level, \code{1-alpha} for
constructing/optimizing confidence intervals.}

\item{beta}{Determines quantile of excess length to optimize, if bandwidth
optimizes given quantile of excess length of one-sided confidence
intervals; otherwise ignored.}

\item{sclass}{Smoothness class, either \code{"T"} for Taylor or
\code{"H"} for HÃ¶lder class.}

\item{order}{Order of local regression 1 for linear, 2 for quadratic.}

\item{se.initial}{Method for estimating initial variance for computing
    optimal bandwidth. Except for \code{"nn"}, all methods assume
    homoskedasticity on either side of cutoff (for RD), or for all data (for
    inference at a point).

\describe{

\item{"EHW"}{Based on residuals from a local linear regression using a
            triangular kernel, and and bandwidth given by a rule-of-thumb
            bandwidth (for inference at a point, see \code{\link{ROTBW.fit}}),
            or IK bandwidth (for fuzzy and sharp RD, see
            \code{\link{IKBW.fit}}). For fuzzy RD, the IK bandwidth is based
            on the reduced-form regression.}

\item{"demeaned"}{Like EHW, but instead of using the regression residuals,
            estimate \eqn{\sigma^2_i}{sigma^2_i} by subtracting the estimated
            intercept from the outcome (and not subtracting the estimated
            slope). }

\item{"Silverman"}{Use residuals from local constant regression with uniform
kernel and bandwidth selected using Silverman's rule of thumb, as in Equation
(14) in Imbens and Kalyanaraman (2012)}
\item{"SilvermanNN"}{Use Silverman's rule of thumb to pick the bandwidth, but
use nearest neighbor estimates, rather than the residuals.}

\item{"nn"}{Use nearest neighbor estimates, without assuming homoskedasticity}
}}

\item{T0}{Initial estimate of the treatment effect for calculating the
optimal bandwidth. Only relevant for Fuzzy RD.}
}
\value{
Returns an object of class \code{"NPRBW"}, see descriptions in
    \code{\link{RDOptBW}}, \code{\link{FRDOptBW}}, and
    \code{\link{LPPOptBW}}.
}
\description{
Basic computing engine called by \code{\link{RDOptBW}},
\code{\link{FRDOptBW}}, and \code{\link{LPPOptBW}} to compute the optimal
bandwidth
}
\examples{
## Lee data
d <- RDData(lee08, cutoff=0)
NPROptBW.fit(d, M=0.1, opt.criterion="MSE")[c("hp", "hm")]
}
\references{
{ \cite{Imbens, Guido, and Kalyanaraman, Karthik,
    "Optimal bandwidth choice for the regression discontinuity estimator."
    The Review of Economic Studies 79 (3): 933-959.} }
}
