% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RD_opt.R
\name{RDTOpt.fit}
\alias{RDTOpt.fit}
\title{Basic computing engine called by \code{\link{RDHonest}} to compute honest
confidence intervals for local optimal estimators in RD under second-order
Taylor class.}
\usage{
RDTOpt.fit(d, M, opt.criterion, alpha = 0.05, beta = 0.5,
  se.method = "supplied.var", J = 3, se.initial = "IK")
}
\arguments{
\item{d}{object of class \code{"RDData"}}

\item{M}{Bound on second derivative of the conditional mean function.}

\item{opt.criterion}{Optimality criterion that bandwidth is designed to
    optimize. It can either be based on exact finite-sample maximum bias and
    finite-sample estimate of variance, or asymptotic approximations to the
    bias and variance. The options are:

   \describe{

   \item{\code{"MSE"}, \code{"aMSE"}}{Finite-sample or asymtotic maximum
       MSE}

   \item{\code{"FLCI"}, \code{"aFLCI"}}{Length of (fixed-length) two-sided
       confidence intervals.}

   \item{\code{"OCI"}, \code{"aOCI"}}{Given quantile of excess length of
       one-sided confidence intervals}

    }

    The finite-sample methods use conditional variance given by
    \code{sigma2}, if supplied. Otherwise, for the purpose of estimating the
    optimal bandwidth, conditional variance is assumed homoscedastic, and
    estimated using a nearest neighbor estimator.}

\item{alpha}{determines confidence level, \code{1-alpha} for
constructing/optimizing confidence intervals.}

\item{beta}{Determines quantile of excess length to optimize, if bandwidth
optimizes given quantile of excess length of one-sided confidence
intervals.}

\item{se.method}{Vector with methods for estimating standard error of
estimate. If \code{NULL}, standard errors are not computed. The elements of
the vector can consist of the following methods:

\describe{
    \item{"nn"}{Nearest neighbor method}

    \item{"EHW"}{Eicker-Huber-White, with residuals from local regression
    (local polynomial estimators only).}

    \item{"demeaned"}{Use EHW, but instead of using residuals, estimate
        \eqn{sigma^2_i} by subtracting the estimated intercept from the
        outcome (and not subtracting the estimated slope). Local
        polynomial estimators only.}

   \item{"plugin"}{Plug-in estimate based on asymptotic variance. Local
        polynomial estimators only.}

   \item{"supplied.var"}{Use conditional variance supplied by \code{sigma2} /
        \code{d} instead of computing residuals}

}}

\item{J}{Number of nearest neighbors, if "nn" is specified in
\code{se.method}.}

\item{se.initial}{Method for estimating initial variance (ignored if
    \code{hp} and \code{hm} are provided, or if data already contains
    estimate of variance.

\describe{

  \item{"IK"}{Based on residuals from a local linear regression using IK
              bandwidth}

   \item{"Silverman"}{Based on Silverman's pilot bandwidth, as in Equatio
   (14) in IK}

}}
}
\value{
Returns an object of class \code{"RDResults"}, see description in
    \code{\link{RDHonest}}
}
\description{
Basic computing engine called by \code{\link{RDHonest}} to compute honest
confidence intervals for local optimal estimators in RD under second-order
Taylor class.
}
