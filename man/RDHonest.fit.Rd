% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RD_lp.R
\name{RDHonest.fit}
\alias{RDHonest.fit}
\title{Basic computing engine called by \code{\link{RDHonest}} to compute honest
confidence intervals}
\usage{
RDHonest.fit(d, M, kern = "triangular", hp, hm = hp, opt.criterion,
  bw.equal = TRUE, alpha = 0.05, beta = 0.8, se.method = "nn", J = 3,
  sclass = "H", order = 1)
}
\arguments{
\item{d}{object of class \code{"RDData"}}

\item{M}{Bound on second derivative of the conditional mean function.}

\item{kern}{specifies kernel function used in the local regression. It
can either be a string equal to "triangular" (\eqn{k(u)=(1-|u|)_{+}}),
"epanechnikov" (\eqn{k(u)=(3/4)(1-u^2)_{+}}), or "uniform" (\eqn{k(u)=
(|u|<1)/2}), or else a function.}

\item{hp, hm}{bandwidth for treated (units with positive running variable),
and control (units with negative running variable) units. If \code{hm} is
not supplied, it is assumed to equal to \code{hp}. If neither bandwidth
is supplied, optimal bandwidth is computed according to criterion given
by \code{opt.criterion}.}

\item{opt.criterion}{Optimality criterion that bandwidth is designed to
    optimize. It can either be based on exact finite-sample maximum bias and
    finite-sample estimate of variance, or asymptotic approximations to the
    bias and variance. The options are:

   \describe{

   \item{\code{"MSE"}, \code{"aMSE"}}{Finite-sample or asymtotic maximum
       MSE}

   \item{\code{"FLCI"}, \code{"aFLCI"}}{Length of (fixed-length) two-sided
       confidence intervals.}

   \item{\code{"OCI"}, \code{"aOCI"}}{Given quantile of excess length of
       one-sided confidence intervals}

    }

    The finite-sample methods use conditional variance given by
    \code{sigma2}, if supplied. Otherwise, for the purpose of estimating the
    optimal bandwidth, conditional variance is assumed homoscedastic, and
    estimated using a nearest neighbor estimator.}

\item{bw.equal}{logical specifying whether bandwidths on either side of
cutoff should be constrainted to equal to each other.}

\item{alpha}{determines confidence level, \code{1-alpha} for
constructing/optimizing confidence intervals.}

\item{beta}{Determines quantile of excess length to optimize, if bandwidth
optimizes given quantile of excess length of one-sided confidence
intervals.}

\item{se.method}{Vector with methods for estimating standard error of
estimate. If \code{NULL}, standard errors are not computed. The elements of
the vector can consist of the following methods:

\describe{
    \item{"nn"}{Nearest neighbor method}
    \item{"EHW"}{Eicker-Huber-White, with residuals from local regression.}
    \item{"demeaned"}{Use EHW, but instead of using residuals, estimate
        \eqn{sigma^2_i} by subtracting the estimated intercept from the
        outcome (and not subtracting the estimated slope)}
    \item{"plugin"}{Plug-in estimate based on asymptotic variance.}
    \item{"supplied.var"}{Use EHW with conditional variance supplied by
        \code{sigma2} / \code{d} instead of computing residuals}
}}

\item{J}{Number of nearest neighbors, if "nn" is specified in \code{se.method}.}

\item{sclass}{Smoothness class, either \code{"T"} for Taylor or
\code{"H"} for HÃ¶lder class.}

\item{order}{Order of local regression 1 for linear, 2 for quadratic.}
}
\value{
Returns an object of class \code{"RDResults"}, see description in
    \code{\link{RDHonest}}
}
\description{
Basic computing engine called by \code{\link{RDHonest}} to compute honest
confidence intervals
}
\examples{

## Lee dataset
d <- RDData(lee08, cutoff=0)
}
